apiVersion: v1
kind: DeploymentConfig
metadata:
  annotations:
    template.alpha.openshift.io/wait-for-ready: 'true'
  labels:
    app.kubernetes.io/part-of: apicurio
    app: {{ .Values.database.name }}
  name: {{ .Values.database.name }}
spec:
  triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
          - {{ .Values.database.name }}
        from:
          kind: ImageStreamTag
          name: "mysql:{{ .Values.database.version }}"
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
  replicas: 1
  strategy:
    type: Recreate
  selector:
    app: {{ .Values.database.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.database.name }}
    spec:
      containers:
        - readinessProbe:
            exec:
              command:
                - /bin/sh
                - '-i'
                - '-c'
                - >-
                  MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u
                  $MYSQL_USER -D $MYSQL_DATABASE -e 'SELECT 1'
            initialDelaySeconds: 5
            timeoutSeconds: 1
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: 3306
            timeoutSeconds: 1
          env:
            - name: MYSQL_DATABASE
              value: {{ .Values.database.schema }}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: apicurio-secret
                  key: db-password
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: apicurio-secret
                  key: db-root-password
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: apicurio-secret
                  key: db-user
          ports:
            - containerPort: {{ .Values.database.port }}
          image: " "
          imagePullPolicy: {{ .Values.database.imagePullPolicy }}
          name: {{ .Values.database.name }}
          volumeMounts:
            - mountPath: /var/lib/mysql/data
              name: mysql-apicurio
      restartPolicy: Always
      volumes:
        - name: mysql-apicurio
          persistentVolumeClaim:
            claimName: apicuriodata
