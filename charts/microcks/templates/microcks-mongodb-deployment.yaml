apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}-mongodb
  labels:
    app: {{ .Values.name }}
    container: mongodb
    group: {{ .Values.name }}
    app.kubernetes.io/part-of: {{ .Values.name }}
spec:
  replicas: 1
  selector:
    app: {{ .Values.name }}
    deploymentconfig: mongodb
    container: mongodb
    group: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        deploymentconfig: mongodb
        container: mongodb
        group: {{ .Values.name }}
    spec:
      containers:
      - name: mongodb
        image: " "
        ports:
        - containerPort: 27017
          protocol: TCP
        readinessProbe:
          timeoutSeconds: 1
          initialDelaySeconds: 3
          exec:
            command:
            - "/bin/sh"
            - "-i"
            - "-c"
            - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
              --eval="quit()"
        livenessProbe:
          timeoutSeconds: 1
          initialDelaySeconds: 30
          tcpSocket:
            port: 27017
        env:
        - name: MONGODB_USER
          value: {{ .Values.mongodb.user }}
        - name: MONGODB_PASSWORD
          value: {{ .Values.mongodb.pass | quote }}
        - name: MONGODB_ADMIN_PASSWORD
          value: {{ .Values.mongodb.pass | quote }}
        - name: MONGODB_DATABASE
          value: {{ .Values.name }}
        resources:
          limits:
            memory: {{ .Values.mongodb.resources.limits.memory | quote }}
        volumeMounts:
        - name: {{ .Values.name }}-mongodb-data
          mountPath: "/var/lib/mongodb/data"
        terminationMessagePath: "/dev/termination-log"
        imagePullPolicy: IfNotPresent
        capabilities: {}
        securityContext:
          capabilities: {}
          privileged: false
      volumes:
      - name: {{ .Values.name }}-mongodb-data
        emptyDir:
          medium: ''
      restartPolicy: Always
      dnsPolicy: ClusterFirst
