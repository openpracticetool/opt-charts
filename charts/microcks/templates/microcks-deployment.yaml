apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
    app: {{ .Values.name }}
    container: spring
    group: {{ .Values.name }}
    app.kubernetes.io/part-of: {{ .Values.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      deploymentconfig: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        deploymentconfig: {{ .Values.name }}
        container: spring
        group: {{ .Values.name }}
    spec:
      containers:
      - name: spring
        image: {{ .Values.image.repo }}:{{ .Values.image.tag | default "latest" }}
        ports:
        - containerPort: 8080
          protocol: TCP
        env:
        - name: JAVA_OPTIONS
          value: ""
        - name: SPRING_PROFILES_ACTIVE
          value: prod
        - name: SPRING_DATA_MONGODB_URI
          value: mongodb://{{ .Values.mongodb.user }}:{{ .Values.mongodb.pass }}@{{ .Values.name }}-mongodb:27017/{{ .Values.mongodb.database }}
        - name: SPRING_DATA_MONGODB_DATABASE
          value: {{ .Values.name }}
        - name: POSTMAN_RUNNER_URL
          value: http://{{ .Values.name }}-postman-runtime:8080
        - name: TEST_CALLBACK_URL
          value: http://{{ .Values.name }}:8080
        - name: KEYCLOAK_URL
          value: {{ .Values.keycloack.host }}/auth
        livenessProbe:
          httpGet:
            path: "/api/health"
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 15
          timeoutSeconds: 3
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: "/api/health"
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 20
          timeoutSeconds: 3
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
          - name: {{ .Values.name }}-config
            mountPath: "/deployments/config"
        terminationMessagePath: "/dev/termination-log"
        imagePullPolicy: IfNotPresent
      volumes:
        - name: {{ .Values.name }}-config
          configMap:
            name: {{ .Values.name }}-config
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
